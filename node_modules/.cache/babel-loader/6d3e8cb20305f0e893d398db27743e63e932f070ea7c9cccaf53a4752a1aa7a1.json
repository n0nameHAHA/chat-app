{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/2023 projects/chat-app/src/components/Input.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport Img from '../img/img.png';\nimport Attach from '../img/attach.png';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { arrayUnion, doc, Timestamp, updateDoc } from 'firebase/firestore';\nimport { db, storage } from '../firebase';\nimport { v4 as uuid } from 'uuid';\nimport { ref, uploadBytesResumable } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid);\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      uploadTask.on(error => {\n        setErr(true);\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateProfile(res.user, {\n            displayName,\n            photoURL: downloadURL\n          });\n          await setDoc(doc(db, 'users', res.user.uid), {\n            uid: res.user.uid,\n            displayName,\n            email,\n            photoURL: downloadURL\n          });\n          await setDoc(doc(db, 'userChats', res.user.uid), {});\n          navigate('/');\n        });\n      });\n    } else {\n      await updateDoc(doc(db, 'chats', data.chatId), {\n        messages: arrayUnion({\n          id: uuid,\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type something...\",\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Attach,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"xUXtEpx9JxtPfIo1zjYBJEzVi+M=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useContext","useState","Img","Attach","AuthContext","ChatContext","arrayUnion","doc","Timestamp","updateDoc","db","storage","v4","uuid","ref","uploadBytesResumable","jsxDEV","_jsxDEV","Input","_s","text","setText","img","setImg","currentUser","data","handleSend","storageRef","uploadTask","on","error","setErr","getDownloadURL","snapshot","then","downloadURL","updateProfile","res","user","displayName","photoURL","setDoc","uid","email","navigate","chatId","messages","id","senderId","date","now","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","display","files","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/2023 projects/chat-app/src/components/Input.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport Img from '../img/img.png';\nimport Attach from '../img/attach.png';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { arrayUnion, doc, Timestamp, updateDoc } from 'firebase/firestore';\nimport { db, storage } from '../firebase';\nimport { v4 as uuid } from 'uuid';\nimport { ref, uploadBytesResumable } from 'firebase/storage';\n\nconst Input = () => {\n  const [text, setText] = useState('');\n  const [img, setImg] = useState(null);\n\n  const { currentUser } = useContext(AuthContext);\n  const { data } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid);\n      const uploadTask = uploadBytesResumable(storageRef, img);\n\n      uploadTask.on(\n        (error) => {\n          setErr(true);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n            await updateProfile(res.user, {\n              displayName,\n              photoURL: downloadURL,\n            });\n            await setDoc(doc(db, 'users', res.user.uid), {\n              uid: res.user.uid,\n              displayName,\n              email,\n              photoURL: downloadURL,\n            });\n\n            await setDoc(doc(db, 'userChats', res.user.uid), {});\n            navigate('/');\n          });\n        },\n      );\n    } else {\n      await updateDoc(doc(db, 'chats', data.chatId), {\n        messages: arrayUnion({\n          id: uuid,\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now(),\n        }),\n      });\n    }\n  };\n  return (\n    <div className=\"input\">\n      <input\n        type=\"text\"\n        placeholder=\"Type something...\"\n        onChange={(e) => setText(e.target.value)}\n      />\n      <div className=\"send\">\n        <img src={Img} alt=\"\" />\n        <input\n          type=\"file\"\n          style={{ display: 'none' }}\n          id=\"file\"\n          onChange={(e) => setImg(e.target.files[0])}\n        />\n        <label htmlFor=\"file\">\n          <img src={Attach} alt=\"\" />\n        </label>\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}